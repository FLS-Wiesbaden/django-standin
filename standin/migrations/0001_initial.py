# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-02-29 20:22
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15, verbose_name='Course name')),
                ('groupBy', models.CharField(max_length=15, null=True, verbose_name='Class name')),
            ],
            options={
                'verbose_name': 'Course',
            },
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('abbreviation', models.SlugField(max_length=20, null=True)),
            ],
            options={
                'verbose_name': 'Type of school',
            },
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vpdtup', models.DateTimeField(auto_now_add=True, verbose_name='Upload date and time')),
                ('vpstand', models.DateTimeField(verbose_name='Date and time of data')),
            ],
            options={
                'verbose_name': 'Standin plan',
                'ordering': ['vpdtup'],
            },
        ),
        migrations.CreateModel(
            name='PlanEntries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.DateField(verbose_name='Day of standin')),
                ('hour', models.PositiveSmallIntegerField(verbose_name='Hour')),
                ('timeStart', models.TimeField()),
                ('timeEnd', models.TimeField()),
                ('room', models.CharField(max_length=15, verbose_name='Original room')),
                ('supplyRoom', models.CharField(max_length=15, null=True, verbose_name='Supply room')),
                ('supplyDate', models.DateField(null=True, verbose_name='Supply date')),
                ('supplyHour', models.PositiveSmallIntegerField(null=True, verbose_name='Supply hour')),
                ('supplyTimeStart', models.TimeField(null=True, verbose_name='Supply time start')),
                ('supplyTimeEnd', models.TimeField(null=True, verbose_name='Supply time end')),
                ('note', models.TextField(max_length=550)),
                ('vptype', models.PositiveSmallIntegerField(verbose_name='Type of standin')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='standin.Course', verbose_name='Affected course')),
                ('header', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='standin.Plan', verbose_name='Plan header')),
            ],
            options={
                'verbose_name': 'Standin',
            },
        ),
        migrations.CreateModel(
            name='SchoolYear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateField()),
                ('end', models.DateField()),
            ],
            options={
                'verbose_name': 'School year',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(max_length=80)),
                ('abbreviation', models.SlugField(max_length=20, unique=True)),
            ],
            options={
                'verbose_name': 'Subject',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.SlugField(max_length=120, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Teacher',
            },
        ),
        migrations.AddField(
            model_name='planentries',
            name='supplySubject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='standin.Subject', verbose_name='Supply teacher'),
        ),
        migrations.AddField(
            model_name='planentries',
            name='supplyTeacher',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='standin.Teacher', verbose_name='Supply teacher'),
        ),
        migrations.AddField(
            model_name='course',
            name='division',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='standin.Division', verbose_name='Division'),
        ),
        migrations.AddField(
            model_name='course',
            name='schoolYear',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='standin.SchoolYear', verbose_name='School year'),
        ),
        migrations.AddField(
            model_name='course',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='standin.Subject', verbose_name='Original subject'),
        ),
        migrations.AddField(
            model_name='course',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='standin.Teacher', verbose_name='Original teacher'),
        ),
    ]
